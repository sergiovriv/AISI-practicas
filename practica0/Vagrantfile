# -*- mode: ruby -*-
# vi: set ft=ruby :
require_relative 'provisioning/vbox.rb'
VBoxUtils.check_version('7.1.6')
Vagrant.require_version ">= 2.4.3"

Vagrant.configure("2") do |config|
    # Box and hostname settings
    config.vm.box = "debian/bookworm64"
    config.vm.box_version = "12.20250126.1"
    config.vm.box_check_update = false
    config.vm.hostname = "svr2425"

    # Network and port forwarding settings
    config.vm.network "forwarded_port", guest: 80, host: 8080
    config.vm.network "private_network", type: "dhcp" #dhcp: true ?
    config.vm.network "private_network", ip: "192.168.56.10", netmask: "24" #netmask: "255.255.255.0"?
    
    # Synced folder
    config.vm.synced_folder "html", "/var/www/html", mount_options: ["dmode=755", "fmode=644"] #["dmode=755,fmode=644"]?

    # Configure vbguest and hostmanager plugins
    config.vbguest.auto_update = false
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = true
    config.hostmanager.manage_guest = true

    # Provider-specific customizations (CPU, memory, disk...)
    config.vm.provider "virtualbox" do |vb|
        vb.name = "AISI-P0-#{config.vm.hostname}"
        vb.gui = false
        vb.cpus = 2
        vb.memory = 2048

        # variables para el controlador SAS y el disco virtual
        sasController = "SAS Controller"
        diskFile = "VMdisk-SAS.vmdk"
	
        # Create the virtual disk if doesn't exist
        unless File.exist?(diskFile)
            vb.customize ["createmedium", "disk", "--filename", diskFile, "--format", "VMDK", "--size", 2048]
        end

        #Add storage SAS controller only when the VM is provisioned for the first time
        unless File.exist?(".vagrant/machines/default/virtualbox/action_provision")
            vb.customize ["storagectl", :id, "--name", sasController, "--add", "sas", "--portcount", 1]
        end

        # Attach the virtual disk into the storage SAS controller
        vb.customize ["storageattach", :id, "--storagectl", sasController, "--port", 1, "--device", 0, "--type", "hdd", "--medium", diskFile]
    end

    # Embedded provisioning through shell script
    config.vm.provision "shell", run: "once", inline: <<-SHELL
        apt update
        apt install -y apache2 php php-mysqli
        systemctl start apache2
        systemctl enable apache2
        mkfs.ext4 /dev/sdb
        mkdir -p /mnt/svr2425
    SHELL
    
    # Provisioning through an external shell script
    config.vm.provision "shell", run: "always", path: "provisioning/script.sh", args: "/mnt/svr2425"
end
